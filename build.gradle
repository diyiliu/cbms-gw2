group 'com.tiza'
version '2.0'

apply plugin: 'java'

sourceCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

ext{
    springVersion = '4.2.5.RELEASE'
}

dependencies {
    compile fileTree(dir: "lib", include: "*.jar")

    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-jdbc', version:"$springVersion"

    compile group: 'io.netty', name: 'netty-all', version: '4.1.22.Final'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
    compile group: 'com.alibaba', name: 'druid', version: '1.1.2'
    compile group: 'com.jolbox', name: 'bonecp', version: '0.8.0.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.37'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.3'
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.11.0'
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile group: 'jaxen', name: 'jaxen', version: '1.1.6'

    compile group: 'net.sf.ehcache', name: 'ehcache-core', version: '2.6.11'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}


jar {
    archiveName = 'cbms-gw.jar'
    manifest {
        attributes(
                'Main-Class': 'com.tiza.gw.Main',
                'Class-Path': 'resources/ lib/' + configurations.compile.collect { it.name }.join(' lib/')
        )
    }

    // 过滤所有配置文件(打包时取消注释)
    sourceSets {
        main {
            resources {
                exclude '*.*'
                exclude '**/'
            }
        }
    }
}

// 拷贝文件
task copyJars(type: Copy) {
    from configurations.runtime
    into 'dist'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}